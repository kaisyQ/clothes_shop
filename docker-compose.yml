services:

  app:
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
    user: "${UID}:${GID}"
    environment:
      - APP_ENV=dev
      - UID=${UID}
      - GID=${GID}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - database
    volumes:
      - ./:/var/www/app

  web:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - app
    volumes:
      - ./:/var/www/app

  database:
    image: postgres:16
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --auth-host=trust
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4-management-alpine
    ports:
      - "${RABBIT_MQ_PORT}:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBIT_MQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBIT_MQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  db-data:
  rabbitmq_data:
